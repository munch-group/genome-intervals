[
  {
    "objectID": "pages/project-guide/git_101.html",
    "href": "pages/project-guide/git_101.html",
    "title": "Version control",
    "section": "",
    "text": "When you are in your &lt;repositoryname&gt; folder, you can run git commands to manage your files, record their changes and sync them to the repository on GitHub for safe keeping. These tutorials are good introductions to git.\nTo journal the creation or modification of a file, you need to add it to git:\n\n\nTerminal\n\ngit add &lt;the_changed_file&gt;\n\nThis “stages” the change. This adds the file to the a “group” of changes that represent some modification to your project. You can add more files to that “group” by running the command again with other files. If you run git status you can see that the files are now staged.\nSo maybe you added or changed two python files addressing some parcitular problem or advancing some part of your project. Now you want to store those of changes to the journal maintained by Git and associate it with a short message describing the changes. For that you use:\n\n\nTerminal\n\ngit commit -m '&lt;message&gt;'\n\nIf you added two python files, your description could be 'Added two python files for my analysis'. If you fixed a bug or added new code to the files, your message should reflect that.\nNow your changes are recorded in the version of the &lt;repositoryname&gt; on the cluster, but that does not serve as a backup in case you accidentally delete your entire folder or the cluster burns down. To backup your repository you need to synchronize your local &lt;repositoryname&gt; repository on the cluster with the &lt;repositoryname&gt; repository on GitHub. To du that use:\n\n\nTerminal\n\ngit push\n\nIn addition to keeping your precious files safe and backed up, your GitHub repository also serve as a journal documenting of your progress. Each commit is a snapshot if your project that can be retrieved at any time.\n\n\n\nThere is a cheat sheet here and some good visual guides here and here.\nThe three most important commands to learn are: git status, git add, git rm, git mv, git commit and git push."
  },
  {
    "objectID": "pages/project-guide/git_101.html#git-as-journaled-backup",
    "href": "pages/project-guide/git_101.html#git-as-journaled-backup",
    "title": "Version control",
    "section": "",
    "text": "When you are in your &lt;repositoryname&gt; folder, you can run git commands to manage your files, record their changes and sync them to the repository on GitHub for safe keeping. These tutorials are good introductions to git.\nTo journal the creation or modification of a file, you need to add it to git:\n\n\nTerminal\n\ngit add &lt;the_changed_file&gt;\n\nThis “stages” the change. This adds the file to the a “group” of changes that represent some modification to your project. You can add more files to that “group” by running the command again with other files. If you run git status you can see that the files are now staged.\nSo maybe you added or changed two python files addressing some parcitular problem or advancing some part of your project. Now you want to store those of changes to the journal maintained by Git and associate it with a short message describing the changes. For that you use:\n\n\nTerminal\n\ngit commit -m '&lt;message&gt;'\n\nIf you added two python files, your description could be 'Added two python files for my analysis'. If you fixed a bug or added new code to the files, your message should reflect that.\nNow your changes are recorded in the version of the &lt;repositoryname&gt; on the cluster, but that does not serve as a backup in case you accidentally delete your entire folder or the cluster burns down. To backup your repository you need to synchronize your local &lt;repositoryname&gt; repository on the cluster with the &lt;repositoryname&gt; repository on GitHub. To du that use:\n\n\nTerminal\n\ngit push\n\nIn addition to keeping your precious files safe and backed up, your GitHub repository also serve as a journal documenting of your progress. Each commit is a snapshot if your project that can be retrieved at any time."
  },
  {
    "objectID": "pages/project-guide/git_101.html#git",
    "href": "pages/project-guide/git_101.html#git",
    "title": "Version control",
    "section": "",
    "text": "There is a cheat sheet here and some good visual guides here and here.\nThe three most important commands to learn are: git status, git add, git rm, git mv, git commit and git push."
  },
  {
    "objectID": "pages/project-guide/submodules.html",
    "href": "pages/project-guide/submodules.html",
    "title": "Submodules",
    "section": "",
    "text": "Submodules are useful if you have analysis components that are used across many projects. It would good to have repos to use for subprojects for these components (between us, I think we have them)\n\nHapMix\nRFmix\nMosaic\nRelate\nARGweaver\nARGweaver Clues\nRelate Clues\nSMC++\nLDhat/helmet\npyro\nGATK mapping and base-calling\nShapeIt phasing\n\nThe repos can each have their own adjustable workflow as decribed here, that are then easily put together in a larger workflow as described here.\n\n\nMake sure you install the current version of Git in your environments. The one on the cluster is ancient.\n\n\nTerminal\n\npixi global install gh git\n\nI also set these configs for each environment to get nicer/safer commands (commands below assume these are set):\ngit config --global diff.submodule log\ngit config status.submodulesummary 1\ngit config push.recurseSubmodules check\nNow, say you have a project repo called “umbrella” that will contain other projects and that you have cloned that:\ngit clone git@github.com:kaspermunch/umbrella.git\n\n\n\nclone repository as submodule:\n\n\nTerminal\n\ngit submodule add git@github.com:munch-group/rfmix.git\n\nand pull the current state of the submodule repo:\n\n\nTerminal\n\ngit submodule init rfmix\ngit submodule update rfmix\n\nThis also generates a .gitmodules configuration file that git uses to keep track of submodules. Commit that the addalong with the submodule:\n\n\nTerminal\n\ngit add .gitmodules rfmix\ngit commit -m 'Added rfmix as submodule'\ngit push\n\nIf you want to work on/change submodule repo you need to check out a branch to work on (main or some other). Always do this. If you decide to make changes later and forgot you did not check out a branch you could loose those changes:\n\n\nTerminal\n\ncd rfmix\ngit checkout main  # (or some other branch)\n\n\n\n\nnow you can then do some work on the tester repo (E.g. change the README.md) and add, commit as usual:\n\n\nTerminal\n\ncd rfmix\n# change README.md\ngit add README.md\ngit commit\n\n\n\n\nTo publish your submodule commit to the tester repo on GitHub you run:\n\n\nTerminal\n\ncd rfmix\ngit push\n\n\n\n\nif you run “git pull” in the umbrella repo, you pull upstream changes to the umbrella repo including the recorded state (commit) of the tester submodule:\n\n\nTerminal\n\ngit pull\n\nbut it does not pull the tester submodule itself. To do that you run pull in the submodule:\n\n\nTerminal\n\ncd rfmix\ngit pull"
  },
  {
    "objectID": "pages/project-guide/submodules.html#preliminaries",
    "href": "pages/project-guide/submodules.html#preliminaries",
    "title": "Submodules",
    "section": "",
    "text": "Make sure you install the current version of Git in your environments. The one on the cluster is ancient.\n\n\nTerminal\n\npixi global install gh git\n\nI also set these configs for each environment to get nicer/safer commands (commands below assume these are set):\ngit config --global diff.submodule log\ngit config status.submodulesummary 1\ngit config push.recurseSubmodules check\nNow, say you have a project repo called “umbrella” that will contain other projects and that you have cloned that:\ngit clone git@github.com:kaspermunch/umbrella.git"
  },
  {
    "objectID": "pages/project-guide/submodules.html#add-a-submodule",
    "href": "pages/project-guide/submodules.html#add-a-submodule",
    "title": "Submodules",
    "section": "",
    "text": "clone repository as submodule:\n\n\nTerminal\n\ngit submodule add git@github.com:munch-group/rfmix.git\n\nand pull the current state of the submodule repo:\n\n\nTerminal\n\ngit submodule init rfmix\ngit submodule update rfmix\n\nThis also generates a .gitmodules configuration file that git uses to keep track of submodules. Commit that the addalong with the submodule:\n\n\nTerminal\n\ngit add .gitmodules rfmix\ngit commit -m 'Added rfmix as submodule'\ngit push\n\nIf you want to work on/change submodule repo you need to check out a branch to work on (main or some other). Always do this. If you decide to make changes later and forgot you did not check out a branch you could loose those changes:\n\n\nTerminal\n\ncd rfmix\ngit checkout main  # (or some other branch)"
  },
  {
    "objectID": "pages/project-guide/submodules.html#making-changes-to-the-submodule",
    "href": "pages/project-guide/submodules.html#making-changes-to-the-submodule",
    "title": "Submodules",
    "section": "",
    "text": "now you can then do some work on the tester repo (E.g. change the README.md) and add, commit as usual:\n\n\nTerminal\n\ncd rfmix\n# change README.md\ngit add README.md\ngit commit"
  },
  {
    "objectID": "pages/project-guide/submodules.html#publishing-submodule-changes-to-github",
    "href": "pages/project-guide/submodules.html#publishing-submodule-changes-to-github",
    "title": "Submodules",
    "section": "",
    "text": "To publish your submodule commit to the tester repo on GitHub you run:\n\n\nTerminal\n\ncd rfmix\ngit push"
  },
  {
    "objectID": "pages/project-guide/submodules.html#getting-submodule-changes-from-github",
    "href": "pages/project-guide/submodules.html#getting-submodule-changes-from-github",
    "title": "Submodules",
    "section": "",
    "text": "if you run “git pull” in the umbrella repo, you pull upstream changes to the umbrella repo including the recorded state (commit) of the tester submodule:\n\n\nTerminal\n\ngit pull\n\nbut it does not pull the tester submodule itself. To do that you run pull in the submodule:\n\n\nTerminal\n\ncd rfmix\ngit pull"
  },
  {
    "objectID": "pages/project-guide/submodules.html#multiple-submodules",
    "href": "pages/project-guide/submodules.html#multiple-submodules",
    "title": "Submodules",
    "section": "Multiple submodules",
    "text": "Multiple submodules\nYou can have as many submodules as you want. With more submodules, each update command updates all submodules."
  },
  {
    "objectID": "pages/overview.html",
    "href": "pages/overview.html",
    "title": "Overview",
    "section": "",
    "text": "genome-intervals lets you …\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#installation",
    "href": "pages/overview.html#installation",
    "title": "Overview",
    "section": "Installation",
    "text": "Installation\nconda install -c munch-group genome-intervals",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#basic-use",
    "href": "pages/overview.html#basic-use",
    "title": "Overview",
    "section": "Basic use",
    "text": "Basic use\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#some-use-case",
    "href": "pages/overview.html#some-use-case",
    "title": "Overview",
    "section": "Some use case",
    "text": "Some use case\nThe functionname function does … genome_intervals.modulename.functionname does … functionname does …\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n\nfrom genome_intervals.modulename import functionname\nfunctionname(3, 4)\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\ncontents:\n  - MdRenderer\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "pages/overview.html#learning-more",
    "href": "pages/overview.html#learning-more",
    "title": "Overview",
    "section": "Learning more",
    "text": "Learning more\nGo to the anvanced page to learn how to …\n\nExamples page: sites using quartodoc.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "api/index.html",
    "href": "api/index.html",
    "title": "Function reference",
    "section": "",
    "text": "Some description…\n\n\n\nfunctionname\nThe sum of two numbers.\n\n\n\n\n\n\nSome description…\n\n\n\nscriptname",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "api/index.html#some-section",
    "href": "api/index.html#some-section",
    "title": "Function reference",
    "section": "",
    "text": "Some description…\n\n\n\nfunctionname\nThe sum of two numbers.",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "api/index.html#some-other-section",
    "href": "api/index.html#some-other-section",
    "title": "Function reference",
    "section": "",
    "text": "Some description…\n\n\n\nscriptname",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "api/functionname.html",
    "href": "api/functionname.html",
    "title": "functionname",
    "section": "",
    "text": "genome_intervals.modulename.functionname(x=1, y=1)\nThe sum of two numbers.\n\n\n\nx : int = 1\n\nThe first number\n\ny : int = 1\n\nThe second number.\n\n\n\n\n\n\n : int\n\nSum of two numbers.\n\n\n\n\n\nAdding two numbers\nresult = foo(2, 4)\n\n\n\nlibraryname.modulename.scriptname",
    "crumbs": [
      "Some section",
      "functionname"
    ]
  },
  {
    "objectID": "api/functionname.html#parameters",
    "href": "api/functionname.html#parameters",
    "title": "functionname",
    "section": "",
    "text": "x : int = 1\n\nThe first number\n\ny : int = 1\n\nThe second number.",
    "crumbs": [
      "Some section",
      "functionname"
    ]
  },
  {
    "objectID": "api/functionname.html#returns",
    "href": "api/functionname.html#returns",
    "title": "functionname",
    "section": "",
    "text": ": int\n\nSum of two numbers.",
    "crumbs": [
      "Some section",
      "functionname"
    ]
  },
  {
    "objectID": "api/functionname.html#examples",
    "href": "api/functionname.html#examples",
    "title": "functionname",
    "section": "",
    "text": "Adding two numbers\nresult = foo(2, 4)",
    "crumbs": [
      "Some section",
      "functionname"
    ]
  },
  {
    "objectID": "api/functionname.html#see-also",
    "href": "api/functionname.html#see-also",
    "title": "functionname",
    "section": "",
    "text": "libraryname.modulename.scriptname",
    "crumbs": [
      "Some section",
      "functionname"
    ]
  },
  {
    "objectID": "api/scriptname.html",
    "href": "api/scriptname.html",
    "title": "scriptname",
    "section": "",
    "text": "scriptname\ngenome_intervals.modulename.scriptname()",
    "crumbs": [
      "Some other section",
      "scriptname"
    ]
  },
  {
    "objectID": "pages/example.html",
    "href": "pages/example.html",
    "title": "Workplace interaction",
    "section": "",
    "text": "%load_ext autoreload\n%autoreload 2\n\nThe autoreload extension is already loaded. To reload it, use:\n  %reload_ext autoreload\nImport some plotting libraries and set some defaults:\nimport sys\nimport numpy as np\nimport pandas as pd\nfrom IPython.display import display, Markdown\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nsns.set_style(\"whitegrid\")\n\nimport random\nrandom_seed = 5\n\nsys.path.append('..')\nfrom global_params import load_params\n%config InlineBackend.figure_formats = ['svg']\nparams = load_params('../global_params.yml')\nparams\n\n{'sample_size': 24}\nparams.sample_size\n\n24",
    "crumbs": [
      "Examples",
      "Workplace interaction"
    ]
  },
  {
    "objectID": "pages/example.html#sampling",
    "href": "pages/example.html#sampling",
    "title": "Workplace interaction",
    "section": "Sampling",
    "text": "Sampling\n\nsubjects = pd.read_csv('../data/data_table.csv')\nassert subjects.index.size == params.sample_size\n\n\nTip:\nBy adding a label and caption to a cell displaying a table, you can refer to that table elsewhere and insert it in a manuscript.\n\n\nsubjects\n\n\n\nTable 1: People included in the analysis.\n\n\n\n\n\n\n\n\n\n\nname\nage\nsex\nposition\nnationality\n\n\n\n\n0\nJulie\n27\nF\nPhDstudent\nDK\n\n\n1\nThomas\n33\nM\nPostdoc\nGB\n\n\n2\nEmilie\n23\nF\nPhDstudent\nCH\n\n\n3\nSofie\n31\nF\nPostdoc\nDK\n\n\n4\nSara\n29\nF\nPostdoc\nUS\n\n\n5\nCecilie\n34\nF\nPostdoc\nDK\n\n\n6\nAnders\n32\nM\nPhDstudent\nUK\n\n\n7\nEmma\n42\nF\nProfessor\nDK\n\n\n8\nCaroline\n31\nF\nPhDstudent\nDK\n\n\n9\nLaura\n30\nF\nPostdoc\nDK\n\n\n10\nMikkel\n33\nM\nPostdoc\nNL\n\n\n11\nJens\n27\nM\nPhDstudent\nDK\n\n\n12\nAndreas\n29\nM\nPhDstudent\nDK\n\n\n13\nJakob\n28\nM\nPhDstudent\nDK\n\n\n14\nMathilde\n61\nF\nProfessor\nDK\n\n\n15\nKatrine\n35\nF\nPostdoc\nDK\n\n\n16\nPoul\n30\nM\nPostdoc\nDK\n\n\n17\nAnna\n26\nF\nPhDstudent\nDK\n\n\n18\nPeter\n42\nM\nProfessor\nGB\n\n\n19\nIda\n53\nF\nPostdoc\nDK\n\n\n20\nFreja\n30\nF\nPostdoc\nDK\n\n\n21\nMaria\n39\nF\nProfessor\nUK\n\n\n22\nAmalie\n29\nF\nPhDstudent\nDK\n\n\n23\nCamilla\n35\nF\nPostdoc\nDK\n\n\n\n\n\n\n\n\n\n\n\nTip:\nBy generaing markdown for descriptions that will eventually end up in the manuscript, you can imbed python values. It also ensures that the manuscript exactly reflects the notebook.\n\n\n\nThe 24 subjects from workplaces in Denmark were interviewed …. blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah",
    "crumbs": [
      "Examples",
      "Workplace interaction"
    ]
  },
  {
    "objectID": "pages/example.html#interviews",
    "href": "pages/example.html#interviews",
    "title": "Workplace interaction",
    "section": "Interviews",
    "text": "Interviews\n\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nCell In[16], line 11\n      1 #| echo: false\n      2 #| label: doc-interviews\n      3 Markdown(f\"\"\"\n      4 \n      5 The {params.sample_size} subjects were asked to score the follow statements:\n      6 \n      7 {\n      8 ''.join([\n      9 f'''{i+1}. {q}\n     10 ''' \n---&gt; 11 for i, q in enumerate(params.questions)])\n     12 }\n     13 \"\"\")\n\nAttributeError: 'Params' object has no attribute 'questions'\n\n\n\nIn interviewed {python} params.sample_size workplace individuals were interviewed by …. blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,\n\n\n#| label: tbl-measured-informality\n#| tbl-cap: \"Informality quantified for subjects in the study.\"\n\ndf = pd.DataFrame({'name': subjects.name, \n                   'seniority': np.random.randint(0, 5, params.sample_size), \n                   'age': subjects.age})\ndf['informality'] = np.random.normal(loc=10, scale=1, size=params.sample_size)\ndf\n\n\n\n\n\n\n\n\nname\nseniority\nage\ninformality\n\n\n\n\n0\nJulie\n3\n27\n9.351339\n\n\n1\nThomas\n0\n33\n10.989881\n\n\n2\nEmilie\n4\n23\n8.383734\n\n\n3\nSofie\n2\n31\n7.349484\n\n\n4\nSara\n4\n29\n10.642044\n\n\n5\nCecilie\n1\n34\n9.069120\n\n\n6\nAnders\n1\n32\n8.972459\n\n\n7\nEmma\n0\n42\n10.527649\n\n\n8\nCaroline\n3\n31\n10.841845\n\n\n9\nLaura\n4\n30\n10.774139\n\n\n10\nMikkel\n0\n33\n9.763656\n\n\n11\nJens\n3\n27\n10.068914\n\n\n12\nAndreas\n3\n29\n10.677834\n\n\n13\nJakob\n4\n28\n10.270929\n\n\n14\nMathilde\n4\n61\n9.972210\n\n\n15\nKatrine\n4\n35\n9.735255\n\n\n16\nPoul\n2\n30\n9.295563\n\n\n17\nAnna\n0\n26\n10.585595\n\n\n18\nPeter\n0\n42\n10.308509\n\n\n19\nIda\n3\n53\n9.978842\n\n\n20\nFreja\n2\n30\n9.584550\n\n\n21\nMaria\n4\n39\n10.955161\n\n\n22\nAmalie\n4\n29\n10.801492\n\n\n23\nCamilla\n3\n35\n8.596924\n\n\n\n\n\n\n\n\ndf.groupby(['seniority']).mean(numeric_only=True).reset_index()\n\n\n\nTable 2: Mean interaction scores by seniority and age\n\n\n\n\n\n\n\n\n\n\nseniority\nage\ninformality\n\n\n\n\n0\n0\n35.200000\n10.435058\n\n\n1\n1\n33.000000\n9.020789\n\n\n2\n2\n30.333333\n8.743199\n\n\n3\n3\n33.666667\n9.919283\n\n\n4\n4\n34.250000\n10.191871\n\n\n\n\n\n\n\n\n\n\n\nsns.scatterplot(x='age', y='informality', data=df, hue='seniority', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age')\nplt.legend(title='Seniority', loc='lower right', labels=['Undergrad', 'Postgrad', 'PhD', 'Postdoc', 'Professor'])\nplt.ylim(bottom=0) ;\n\n\n\n\n\n\n\nFigure 1: Interaction among Danes: How Danes interact is has very little to do with age and seniority, compared to most other contries.\n\n\n\n\n\nSeems Danish people act very informally unaffected by age and seniority.\n\ninformality_age_cor = df.informality.corr(df.age)\ninformality_age_cor\n\n0.11331363182555239\n\n\n\ninformality_seniority_cor = df.informality.corr(df.seniority)\ninformality_seniority_cor\n\n0.03700382395304842\n\n\n\n\nThe correlation between informality and age was 0.113 and the correlation between informality and seniority was 0.037.\n\n\n\nsns.lmplot(x='age', y='informality', data=df, hue='seniority', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age') ;\n\n\n\n\n\n\n\nFigure 2: Interaction among Danes: Regressions of informality against age for five levels of seniority.",
    "crumbs": [
      "Examples",
      "Workplace interaction"
    ]
  },
  {
    "objectID": "pages/project-guide/setup.html",
    "href": "pages/project-guide/setup.html",
    "title": "Laptop setup",
    "section": "",
    "text": "You will work on our computing cluster, but before we get there, we must get you properly set up on your machine.\n\n\nThe programs you will use in the project are command-line applications. I.e., programs executed by writing their name and any arguments in a “terminal” rather than clicking on an icon and using a graphical user interface. Many different programs can serve as a terminal.\n\nIf you have a Windows machine, use the Windows Powershell app.\nIf you have a Mac, the terminal you will use is called Terminal.\n\nFrom now on, whenever I refer to the terminal, I mean Anaconda Powershell Prompt on Windows and Terminal on Mac. I will assume some familiarity with using a terminal and executing commands on the command line. If you have not used a terminal before, or if you are a bit rusty, you should run through this primer before you go on.\n\n\n\nFirst install Pixi if you did not do so already."
  },
  {
    "objectID": "pages/project-guide/setup.html#the-pixi-environment",
    "href": "pages/project-guide/setup.html#the-pixi-environment",
    "title": "Laptop setup",
    "section": "The Pixi environment",
    "text": "The Pixi environment"
  }
]